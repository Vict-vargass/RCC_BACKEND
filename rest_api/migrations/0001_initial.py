# Generated by Django 4.2.5 on 2023-11-24 21:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('rut', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('correo', models.EmailField(max_length=100, unique=True)),
                ('nombre', models.CharField(max_length=20)),
                ('apellido', models.CharField(max_length=20)),
                ('telefono', models.CharField(max_length=10)),
                ('password', models.CharField(max_length=15)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='RCC_BACKEND/static/cliente/')),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Descuento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=1000)),
                ('porcentaje', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Pyme',
            fields=[
                ('rut', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=15)),
                ('correo', models.CharField(max_length=30)),
                ('telefono', models.CharField(max_length=10, null=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='RCC_BACKEND/static/pyme/')),
                ('estado', models.BooleanField(choices=[('True', 'Activo'), ('False', 'Inactivo')], default=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('direccion', models.CharField(max_length=200)),
                ('pyme', models.ForeignKey(db_column='pyme', on_delete=django.db.models.deletion.CASCADE, related_name='sucursales', to='rest_api.pyme')),
            ],
        ),
        migrations.CreateModel(
            name='Redes_sociale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('red_social', models.CharField(choices=[('Instagram', 'Instagram'), ('Facebook', 'Facebook'), ('Twitter', 'Twitter'), ('Sitio Web', 'Sitio Web')], max_length=25)),
                ('link', models.CharField(max_length=2000)),
                ('pyme', models.ForeignKey(db_column='pyme', on_delete=django.db.models.deletion.CASCADE, related_name='redes_sociales', to='rest_api.pyme')),
            ],
        ),
        migrations.CreateModel(
            name='Informacion_pyme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=4000)),
                ('horarios', models.CharField(max_length=500, null=True)),
                ('direccion', models.CharField(max_length=50)),
                ('pyme', models.OneToOneField(db_column='pyme', on_delete=django.db.models.deletion.CASCADE, related_name='informacion', to='rest_api.pyme')),
            ],
        ),
        migrations.CreateModel(
            name='Imagenes_descuento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='RCC_BACKEND/static/descuento/')),
                ('descuento', models.ForeignKey(db_column='desc', on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='rest_api.descuento')),
            ],
        ),
        migrations.CreateModel(
            name='Historial_asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_ahorrado', models.IntegerField()),
                ('fecha', models.DateField()),
                ('descuento', models.ManyToManyField(to='rest_api.descuento')),
                ('pyme', models.ForeignKey(db_column='pyme', on_delete=django.db.models.deletion.CASCADE, related_name='asistentes', to='rest_api.pyme')),
                ('rut_cliente', models.ForeignKey(db_column='rut_cliente', on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='rest_api.cliente')),
            ],
            options={
                'ordering': ['-fecha', '-id'],
            },
        ),
        migrations.AddField(
            model_name='descuento',
            name='pyme',
            field=models.ForeignKey(db_column='pyme', on_delete=django.db.models.deletion.CASCADE, related_name='descuentos', to='rest_api.pyme'),
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=20, unique=True)),
                ('correo', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=1000)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
